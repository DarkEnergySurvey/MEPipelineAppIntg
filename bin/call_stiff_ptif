#!/usr/bin/env python

"""
A simple script to make the stiff call for the ME Pipeline that
will create the ptif files
"""

import os
import sys
import argparse
import time
from despymisc.miscutils import elapsed_time

PTIF_BANDS = ['g','r','i','z','Y','det','u']
STIFF_EXE = 'stiff'
BKLINE = "\\\n"
DETNAME = 'det'

def list2dict(v):
    return dict(v[i:i+2] for i in range(0, len(v), 2))

def read_bandlist(bandlist,verb=False):

    bandnames = {}
    if verb:
        print "# Reading bandlist from file: %s" % bandlist
    for line in open(bandlist).readlines():
        if line[0] == "#":
            continue
        band = line.split()[1]
        bandnames[band] = line.split()[0]

    return bandnames

def read_maxlevels(levellist,verb=False):  
    if verb:
        print "# Reading MAX_LEVEL list from file: %s" % levellist

    levels = {}
    for line in open(levellist).readlines():
        if line[0] == "#":
            continue
        band = line.split()[0]
        levels[band] = line.split()[1]

    return levels

def build_call(bandanames, maxlevels, **args):

    if args['verb']:
        print "# Build call PTIF call"
    
    # Make sure that we use the intersection of both lists
    bands_present = list( set(bandanames.keys()) & set(maxlevels.keys()) )
    filenames = ["%s'[0]'" % bandnames[band] for band in PTIF_BANDS if band in bands_present]
    maxvalues = [maxlevels[band] for band in PTIF_BANDS if band in bands_present]

    cmd_list = []
    cmd_list.append("%s" % STIFF_EXE)
    cmd_list.extend(filenames)
    cmd_list.append("-c %s" % args['config_stiff'])

    pars = {}
    pars['-MAX_LEVEL']    = ','.join(maxvalues)
    pars['-NTHREADS']     = 1
    pars['-DESCRIPTION']  = "'Pseudo Color of coadded image created by DESDM/NCSA'"

    # Update and overide the parameters from the command line
    pars.update(args['stiff_parameters'])

    # Go over all of the modifications
    for param,value in pars.items():
        # Make sure the Astromatic params start with '-' like -OUTFILE_NAME
        if param[0] != '-':
            print "# adding '-' to Stiff param %s" % param
            param = '-'+param
        cmd_list.append("%s %s" % (param,value))
    
    if args['verb']:
        print "# Will execute:"
        print "%s\n" % BKLINE.join(cmd_list)

    if not args['dryrun']:
        cmd_exe = "%s\n" % " ".join(cmd_list)
        os.system(cmd_exe)

    return 
    

if __name__ == "__main__":

    parser = argparse.ArgumentParser(description="Call stiff for ptif creatio for the Multi-epoch pipeline")
    parser.add_argument("bandlist", action="store",default=None,
                        help="List of coadd fits files to use")
    parser.add_argument("--detimage", action="store",default=None, required=True,
                        help="The name of the detection image")
    parser.add_argument("-c","--config_stiff", action="store",default=None, required=True,
                        help="Stiff Ptif config file")
    parser.add_argument("--config_maxlevel", action="store",default=None, required=True,
                        help="MAX_LEVEL config file")
    parser.add_argument("--verb", action="store_true",default=False,
                        help="Verbose?")
    parser.add_argument("--dryrun", action="store_true",default=False,
                        help="Print and exit?")
    
    # Parse the args and get the extras
    args, extra_args = parser.parse_known_args(sys.argv[1:])

    # Parse the extras args list into a dictionary
    args.stiff_parameters = list2dict(extra_args)

    t0 = time.time()

    # Read in the list and load it into a dictionary
    bandnames = read_bandlist(args.bandlist,verb=args.verb)
    # Append the detname to the dictionary
    bandnames[DETNAME] = args.detimage
    
    # Read in the MAX_LEVEL
    max_levels = read_maxlevels(args.config_maxlevel,verb=args.verb)

    # Make the call
    build_call(bandnames,max_levels,**vars(args))

    print "# Stiff PTIF creation time: %s" % elapsed_time(t0)

